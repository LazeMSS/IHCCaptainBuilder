name: CustoPiZe
on:
  workflow_dispatch:
    inputs:
      input_image:
        description: "The base image to use as input for CustoPiZer"
        required: true
        default: "https://downloads.raspberrypi.org/raspios_lite_armhf/images/raspios_lite_armhf-2023-02-22/2023-02-21-raspios-bullseye-armhf-lite.img.xz"
jobs:
  init:
    name: "Init and download"
    runs-on: ubuntu-latest
    steps:
      - name: "üõí Checkout repo"
        uses: actions/checkout@v3

      - name: "Set enviroment"
        run: |
          echo md5file="$(echo -n "${{ github.event.inputs.input_image }}" | md5sum)" >> "$GITHUB_ENV"
     
      - name: "Check cache"
        id: file-cache
        uses: actions/cache@v3
        env:
          cache-name: cache-name
        with:
          path: ~/.cache
          key: ${{ env.md5file }}
      
      - if: ${{ steps.cache-name.outputs.cache-hit != 'true' }}
      - name: "‚¨áÔ∏è Download Raspberry Pi image"
        run: |
          echo "${{ env.md5file }}"
          filename=$(basename "${{ github.event.inputs.input_image }}")
          fileext="${filename##*.}"
          output="image.$fileext"

          mkdir build
          cd build

          echo "Downloading $filename into build/$output"

          curl -q --no-progress-meter -L -o "$output" ${{ github.event.inputs.input_image }}
          if [ "$fileext" == "xz" ]; then
            xz -d "$output"
            mv image input.img
          else      
            unzip "$output"
            rm "$output"
            IMAGE=$(ls *.img | head -n 1)
            mv "$IMAGE" input.img
          fi
          cp input.img ~/.cache/${{ env.md5file }}
          echo "Download completed..."
