name: "🛠️ CustoPiZe"
on:
  workflow_dispatch:
    inputs:
      input_image:
        description: "The base image to use as input for CustoPiZer"
        required: true
        default: "https://downloads.raspberrypi.org/raspios_lite_armhf/images/raspios_lite_armhf-2023-02-22/2023-02-21-raspios-bullseye-armhf-lite.img.xz"

jobs:
  init:
    name: "📦 Get the input file"
    runs-on: ubuntu-latest
    steps:
      - name: "🛒 Checkout repo"
        uses: actions/checkout@v3

      - name: "🌴 Set enviroment"
        run: |
          echo md5file="$(echo -n "${{ github.event.inputs.input_image }}" | md5sum)" >> "$GITHUB_ENV"
     
      - name: "💾 Check cache in file"
        id: file-cache
        uses: actions/cache@v3
        env:
          cache-name: cache-name
        with:
          path: ~/.cache
          key: ${{ env.md5file }}
      
      - if: ${{ steps.cache-name.outputs.cache-hit != 'true' }}
        name: "⏬ Download Raspberry Pi image"
        run: |
          filename=$(basename "${{ github.event.inputs.input_image }}")
          fileext="${filename##*.}"
          output="image.$fileext"

          mkdir build
          cd build

          echo "Downloading $filename into build/$output"

          curl -q --no-progress-meter -L -o "$output" ${{ github.event.inputs.input_image }}
          if [ "$fileext" == "xz" ]; then
            xz -d "$output"
            mv image input.img
          else      
            unzip -q "$output"
            rm "$output"
            IMAGE=$(ls *.img | head -n 1)
            mv "$IMAGE" input.img
          fi
          pwd
          ls
          mkdir -p ~/.cache/
          cd ~/.cache/
          pwd
          cd 
          echo "~/.cache/${{ env.md5file }}"
          echo ${{ env.md5file }}
          cp /home/runner/work/IHCCaptainBuilder/IHCCaptainBuilder/build/input.img "~/.cache/${{ env.md5file }}"
          echo "### :rocket: Download completed - stored in ~/.cache/${{ env.md5file }}" >> $GITHUB_STEP_SUMMARY

  build:
    name: "🏗️ Build image"
    needs: init
    runs-on: ubuntu-latest
    steps:
    
      - name: "🏃 Run CustoPiZer"
        uses: OctoPrint/CustoPiZer@main
        with:
          workspace: '${{ github.workspace }}/build'
          config: '${{ github.workspace }}/config.local'
          scripts: '${{ github.workspace }}/scripts'
          environment: '{ "INSIDEGITHUB": "true" }'

      - name: "🧰 Package the image"
        uses: OctoPrint/actions/package-rpi-image@main
        id: package-image
        with:
          image_path: '${{ github.workspace }}/build/output.img'

      - name: "⏫ Upload Artifact"
        uses: actions/upload-artifact@v3
        with: 
          path: ${{ github.workspace }}/build/${{ steps.package-image.outputs.zip_name }}
